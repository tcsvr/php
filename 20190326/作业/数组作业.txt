数组练习

练习1.

$arr1 = array("A", "B", "C");
$arr2 = array("X", "Y", "Z");

如果不用 array_merge()。如何将以上的两个数组合并成一个数组：array("A","B","C","X","Y","Z");
并对数组进行降序排列。

练习2:

$arr1 = array('A','B','C','D','E','F');

如果不用 array_reverse(),如何将$arr1重新构建数组为 $arr2 = array('F','E','D','C','B','A');

练习3：

2）通过二维数组定义下列的数组：

手机品牌 phone_brand 数组名称

品牌列表：
名称(name)   手机屏幕大小(size)   颜色(color)   价格(price)
iPhone 6S    4英寸                土豪金        4500元
小米note     5.7英寸              银色          1999元
坚果         5.5英寸              黑色          999元
乐视1pro     5.5英寸              银色          1499元

练习4：

通过定义好的数组显示以上的表格形式（可通过表格）

练习5：

把数组
$test1= array(
	'id' => array(1,2,3,4),
	'name' => array('小米','魅族','苹果','锤子'),
	'price' => array('1999','1799','3999','3000')
);
重构成
$test2= array(
	'id0' => array(1,'小米','1999'),
	'id1' => array(2,'魅族','1799'),
	'id2' => array(3,'苹果','3999'),
	'id3' => array(4,'锤子','3000')
);




练习6：
冒泡排序
其基本思想是：
通过相邻元素之间的比较和交换使较小的元素逐渐从后向前移动，就像水底的气泡一样逐渐向上冒。
具体过程如下：
首先比较d[n]和d[n-1]，若d[n]<d[n-1]，则交换，使较小的元素前移，较大的元素后移；接着比较d[n-1]和d[n-2]，以 此类推，直到比较d[2]和d[1]并使较小的元素前移，第一趟排序结束,则d[1]为最小的元素。然后在d[2]..d[n]间进行第二趟排序，使第二 小元素前移到d[2]位置；n-1趟排序后，整个冒泡排序结束。

根据上面的提示，不用PHP自带的函数，将下面数组进行由大到小排序
$arr = array(225,220,43,155,562,70,55,150);

练习7：

1）$list = array(
	'市场部'=>array(
		array('1','高某','市场部经理','5000'),
		array('2','罗某','职员','3000'),
		array('3','周某','职员','2400')
	),
	'产品部'=>array(
		array('1','高某','产品部经理','6000'),
		array('2','罗某','职员','4000'),
		array('3','周某','职员','2300')
	),
	'财务部'=>array(
		array('1','高某','财务部经理','6000'),
		array('2','罗某','职员','4000'),
		array('3','周某','职员','2300')
	),
	'咨询部'=>array(
		array('1','罗某','咨询部主管','8000'),
		array('2','谭某','职员','9000'),
		array('3','陈某','职员','8300'),
		array('3','陈某','职员','8300'),
		array('3','陈某','职员','8300')
	),
);
用上面数组，输出效果为table.jpg
用高级分离术 